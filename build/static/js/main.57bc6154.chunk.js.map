{"version":3,"sources":["utils/TypographyVariant.ts","config/theme.ts","models/Dice.ts","pages/CharacterCreatorPage/CharacterInfo.tsx","pages/CharacterCreatorPage/CharacterProfile.tsx","models/COCInvestigator/COCInvestigator.ts","config/customThemeProps.ts","pages/CharacterCreatorPage/CharacterBaseStats.tsx","utils/COCCalculators.ts","models/COCInvestigator/InvestigatorSkills.ts","models/COCInvestigator/InvestigatorOccupations.ts","service/HTTPMethods.ts","pages/CharacterCreatorPage/CharacterOccupation.tsx","pages/CharacterCreatorPage/CharacterSkills.tsx","service/endpoints/endpointRoutes.ts","service/endpoints/investigatorEndpoints.ts","service/getAxiosInstance.ts","config.ts","pages/CharacterCreatorPage/CharacterCreatorPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TypographyVariant","theme","createMuiTheme","typography","fontFamily","h1","fontWeight","fontSize","lineHeight","h2","letterSpacing","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","palette","primary","main","secondary","text","background","default","paper","divider","type","DiceType","CharacterInfo","info","setInfo","Box","display","flex","flexDirection","Typography","variant","H4","color","borderRadius","border","padding","height","bgcolor","TextField","label","value","player","onChange","name","occupation","disabled","birthplace","sex","age","specialExpendableStatNames","id","Avatar","styled","img","CharacterProfile","specialStats","avatarUrl","setStats","setAvatarUrl","classes","makeStyles","root","backgroundColor","useStyles","useState","shouldShowUrlInputDialog","setShouldShowUrlInputDialog","shouldShowAvatar","setShouldShowAvatar","useEffect","mb","Grid","container","spacing","map","stat","item","md","e","width","justifyContent","alignItems","src","onError","onClick","Button","m","Dialog","open","onClose","DialogTitle","DialogContent","ml","COCInvestigator","stats","skills","this","baseStats","strength","dexterity","intelligence","constitution","appearance","power","size","sanity","education","luck","damageBonus","magicPoints","health","currentHealth","sanityPoints","build","moveRate","currentMagic","accounting","anthropology","appraise","archaeology","art","charm","climb","creditRating","cthulhuMythos","disguise","dodge","driveAuto","electricRepair","fastTalk","fighting","firearmsHandgun","firearmsShotgun","firearmsRifle","firearmsAutomatic","firstAid","history","intimidate","jump","language","law","libraryUse","listen","locksmith","mechanicalRepair","medicine","naturalWorld","navigate","occult","persuade","pilot","psychology","psychoanalysis","science","sleightOfHand","spotHidden","stealth","survival","swim","throw","track","customThemeProps","blueishGray","waterGreen","specialStatNames","statNames","CharacterBaseStats","statName","mr","px","BODY1","Math","floor","mt","Dice","amount","diceType","InvestigatorSkillTypes","InvestigatorSkillTypeNames","InvestigatorStatTypes","MoveRateCalculator","str","dex","siz","HttpMethod","occupationNames","occupations","description","min","max","skillPoints","multiplier","extraSkillTypes","interpersonalSkills","suggestedContacts","optionalSkillPoints","getOccupationSkillsString","st","skill","join","concat","getOccupationSkillPointsString","reduce","acc","current","length","slice","CharacterOccupation","setOccupation","select","fullWidth","MenuItem","OVERLINE","BODY2","skillsOldState","shouldHighlightSkill","indexOf","CharacterSkills","setSkill","remainingHobbieSkillPoints","remainingOccupationSkillPoints","totalOccupationSkillPoints","setRemainingHobbieSkillPoints","setRemainingOccupationSkillPoints","useHighlightedStyles","highlightedClasses","H6","my","Object","keys","skillName","event","newSkillValue","Number","target","pointVariation","includes","endpointRoutes","config","fetcher","baseURL","axios","create","saveInvestigator","investigator","a","request","url","method","POST","data","Wrapper","div","baselineInvestigator","CharacterCreatorPage","useParams","characterId","character","setCharacter","setBaseStats","setSpecialStats","setSkills","remainingHobbiePoints","setRemainingHobbiePoints","setTotalOccupationSkillPoints","isErrorDialogOpen","setIsErrorDialogOpen","errorMessages","setErrorMessages","calculateSpecialStats","db","d4","d6","DamageBonusAndBuildCalculator","ThemeProvider","propName","newAge","newStat","newOccupation","find","occ","newTotal","getTotalOccupationSkillPoints","newSkill","totalHobbieSkillPoints","latestErrorMessages","push","message","DialogContentText","AppWrapper","App","className","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57bc6154.chunk.js","sourcesContent":["export enum TypographyVariant {\n  H1 = 'h1',\n  H2 = 'h2',\n  H3 = 'h3',\n  H4 = 'h4',\n  H5 = 'h5',\n  H6 = 'h6',\n  SUBTITLE1 = 'subtitle1',\n  SUBTITLE2 = 'subtitle2',\n  BODY1 = 'body1',\n  BODY2 = 'body2',\n  CAPTION = 'caption',\n  BUTTON = 'button',\n  OVERLINE = 'overline',\n}","import { createMuiTheme } from \"@material-ui/core\";\n\n\n//TODO dark mode background: #111213 text: #688a81\nexport const theme = createMuiTheme({\n  typography: {\n    fontFamily: \"Montserrat\",\n    h1: {\n      fontWeight: 400,\n      fontSize: 34,\n      lineHeight: \"40px\",\n    },\n    h2: {\n      fontWeight: 400,\n      fontSize: 24,\n      lineHeight: \"32px\",\n      letterSpacing: 0.18,\n    },\n    h3: {\n      fontWeight: 700,\n      fontSize: 18,\n      lineHeight: \"24px\",\n    },\n    h4: {\n      fontWeight: 400,\n      fontSize: 20,\n      lineHeight: \"28px\",\n      letterSpacing: 0.15,\n    },\n    h5: {\n      fontWeight: 700,\n      fontSize: 16,\n      lineHeight: \"24px\",\n    },\n    h6: {\n      fontWeight: 700,\n      fontSize: 14,\n      lineHeight: \"20px\",\n    },\n    subtitle1: {\n      fontWeight: 400,\n      fontSize: 16,\n      lineHeight: \"24px\",\n      letterSpacing: 0.15,\n    },\n    subtitle2: {\n      fontWeight: 500,\n      fontSize: 14,\n      lineHeight: \"24px\",\n      letterSpacing: 0.1,\n    },\n    body1: {\n      fontWeight: 400,\n      fontSize: 16,\n      lineHeight: \"24px\",\n      letterSpacing: 0.5,\n    },\n    body2: {\n      fontWeight: 400,\n      fontSize: 14,\n      lineHeight: \"20px\",\n      letterSpacing: 0.25,\n    },\n    button: {\n      fontWeight: 500,\n      fontSize: 14,\n      lineHeight: \"16px\",\n      letterSpacing: 1.25,\n    },\n    caption: {\n      fontWeight: 400,\n      fontSize: 12,\n      lineHeight: \"16px\",\n      letterSpacing: 0.4,\n    },\n    overline: {\n      fontWeight: 500,\n      fontSize: 12,\n      lineHeight: \"16px\",\n      letterSpacing: 1.4,\n    },\n  },\n  palette: {\n    primary: {\n      main: '#2f4f48',\n\n    },\n    secondary: {\n      main: '#526F35',\n    },\n    text: {\n      primary: '#ffffff',\n      secondary: '#688a81',\n    },\n    background: {\n      default: '#121212',\n      paper: '#181818',\n    },\n    divider: '#ffffff',\n    type: \"dark\",\n  },\n});\n","export class Dice {\n  diceType: DiceType \n  amount: number\n\n  constructor(type: DiceType, amount?: number) {\n    this.diceType = type\n    this.amount = amount || 1\n  }\n\n  public roll() {\n    //roll dice\n  }\n  public toString() {\n    return `${this.amount}${this.diceType}`\n  }\n}\n\nexport class DicePool {\n  diceTypes: DiceType []\n  amount: number[]\n\n  constructor(types: DiceType[], amount: number[]) {\n    this.diceTypes = types\n    this.amount = amount\n  }\n\n  public roll() {\n    //roll dice\n  }\n\n}\n\nexport enum DiceType {\n  d3 = 'd3',\n  d4 = 'd4',\n  d6 = 'd6',\n  d8 = 'd8',\n  d10 = 'd10',\n  d12 = 'd12',\n  d20 = 'd20',\n  d100 = 'd100',\n}","import React, { ChangeEvent } from \"react\";\nimport { Box, TextField, Typography } from \"@material-ui/core\";\nimport { InvestigatorBaseInfo } from \"../../models/COCInvestigator/COCInvestigator\";\nimport { TypographyVariant } from \"../../utils/TypographyVariant\";\nimport { theme } from \"../../config/theme\";\n\nexport interface CharacterInfoProps {\n  info: InvestigatorBaseInfo;\n  setInfo: (propName: string) => (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n}\nexport const CharacterInfo: React.FC<CharacterInfoProps> = ({ info, setInfo }) => {\n  return (\n    <Box display=\"flex\"\n    flex={1}\n    flexDirection=\"column\" >\n      <Typography variant={TypographyVariant.H4} color=\"textPrimary\">{'Character Info'}</Typography>\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        borderRadius=\"4px\"\n        border={`2px solid black`}\n        padding=\"16px\"\n        height=\"100%\"\n        bgcolor={theme.palette.background.paper}\n      >\n          <TextField label=\"Player name\" value={info.player} onChange={setInfo('player')}/>\n          <Box height=\"8px\"/>\n          <TextField label=\"Name\" value={info.name} onChange={setInfo('name')}/>\n          <Box height=\"8px\"/>\n          <TextField label=\"Occupation\" value={info.occupation} onChange={setInfo('occupation')} disabled/>\n          <Box height=\"8px\"/>\n          <TextField label=\"Birthplace\" value={info.birthplace} onChange={setInfo('birthplace')}/>\n          <Box height=\"8px\"/>\n          <TextField label=\"Sex\" value={info.sex} onChange={setInfo('sex')}/>\n          <Box height=\"8px\"/>\n          <TextField label=\"Age\" value={info.age} onChange={setInfo('age')}/>\n        </Box>\n        </Box>\n  )\n}\n","import React, { ChangeEvent, useState, useEffect } from \"react\";\nimport {\n  Box,\n  Grid,\n  TextField,\n  Typography,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { InvestigatorSpecialStats } from \"../../models/COCInvestigator/COCInvestigator\";\nimport { TypographyVariant } from \"../../utils/TypographyVariant\";\nimport { theme } from \"../../config/theme\";\nimport styled from \"styled-components\";\n\nexport interface CharacterProfileProps {\n  specialStats: InvestigatorSpecialStats;\n  setStats: (\n    propName: string\n  ) => (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void;\n  avatarUrl: string;\n  setAvatarUrl: (\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => void;\n}\n\nconst specialExpendableStatNames = [\n  {\n    label: \"health\",\n    id: \"health\",\n  },\n  {\n    label: \"sanity\",\n    id: \"sanityPoints\",\n  },\n  {\n    label: \"magic\",\n    id: \"magicPoints\",\n  },\n];\n\nconst Avatar = styled.img`\n  max-height: 100%;\n  max-width: 100%;\n`;\n\nexport const CharacterProfile: React.FC<CharacterProfileProps> = ({\n  specialStats,\n  setStats,\n  avatarUrl,\n  setAvatarUrl,\n}) => {\n  const useStyles = makeStyles({\n    root: {\n      \"& .MuiOutlinedInput-root\": {\n        backgroundColor: \"#232323\",\n        color: \"#fff\",\n      },\n      \"& .MuiInputLabel-root\": {\n        color: \"#fff\",\n      },\n    },\n  });\n  const classes = useStyles();\n  const [shouldShowUrlInputDialog, setShouldShowUrlInputDialog] = useState(\n    false\n  );\n  const [shouldShowAvatar, setShouldShowAvatar] = useState(!!avatarUrl);\n  useEffect(() => {\n    setShouldShowAvatar(true);\n    setShouldShowUrlInputDialog(false);\n  }, [avatarUrl]);\n  const handleCloseInputDialog = () => setShouldShowUrlInputDialog(false);\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" flex={1}>\n      <Typography variant={TypographyVariant.H4} color=\"textPrimary\">\n        {\"Vital Stats\"}\n      </Typography>\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        borderRadius=\"4px\"\n        border={`2px solid black`}\n        padding=\"16px\"\n        bgcolor={theme.palette.background.paper}\n        mb={2}\n      >\n        <Grid container spacing={1}>\n          {specialExpendableStatNames.map((stat) => {\n            return (\n              <Grid item md={4}>\n                <TextField\n                  label={stat.label}\n                  //@ts-ignore\n                  value={specialStats[stat.id]}\n                  variant={\"outlined\"}\n                  classes={{ root: classes.root }}\n                  onChange={(e) => {\n                    return;\n                  }}\n                />\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Box>\n      <Typography variant={TypographyVariant.H4} color=\"textPrimary\">\n        {\"Portrait\"}\n      </Typography>\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        borderRadius=\"4px\"\n        border={`2px solid black`}\n        bgcolor=\"#202020\"\n        height=\"100%\"\n        width=\"auto\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        {shouldShowAvatar ? (\n          <Avatar\n            src={avatarUrl}\n            onError={() => setShouldShowAvatar(false)}\n            onClick={() => setShouldShowUrlInputDialog(true)}\n          />\n        ) : (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setShouldShowUrlInputDialog(true)}\n          >\n            <Box m={1}>Select portrait url</Box>\n          </Button>\n        )}\n      </Box>\n      <Dialog open={shouldShowUrlInputDialog} onClose={handleCloseInputDialog}>\n        <DialogTitle>\n          {\"Paste a valid public url to use as your character portrait\"}\n        </DialogTitle>\n        <DialogContent>\n          <Box ml={2}>\n            <TextField\n              label=\"Player name\"\n              value={avatarUrl}\n              onChange={setAvatarUrl}\n            />\n          </Box>\n        </DialogContent>\n      </Dialog>\n    </Box>\n  );\n};\n","import { DicePool, Dice } from \"../Dice\"\n\nexport class COCInvestigator {\n  info: InvestigatorBaseInfo\n  stats: InvestigatorStats\n  skills: InvestigatorSkills\n\n  constructor() {\n    this.info = {\n      name: '',\n      occupation: '',\n      player: '',\n      birthplace: '',\n      sex: '',\n      age: 1,\n      avatarUrl: ''\n    }\n    this.stats = {\n      baseStats: {\n        strength: 50,\n        dexterity: 50,\n        intelligence: 50,\n        constitution: 50,\n        appearance: 50,\n        power: 50,\n        size: 50,\n        sanity: 50,\n        education: 50,\n      },\n      specialStats: {\n        luck: 50,\n        damageBonus: 1,\n        magicPoints: 5,\n        health: 10,\n        currentHealth: 10,\n        sanityPoints: 50,\n        build: 0,\n        moveRate: 7,\n        currentMagic: 5,\n      }\n    }\n    this.skills = {\n      accounting: 5,\n      anthropology: 1,\n      appraise: 5,\n      archaeology: 1,\n      art: 5,\n      charm: 15,\n      climb: 20,\n      creditRating: 0,\n      cthulhuMythos: 0,\n      disguise: 5,\n      dodge: 25,\n      driveAuto: 20,\n      electricRepair: 10,\n      fastTalk: 5,\n      fighting: 25,\n      firearmsHandgun: 25,\n      firearmsShotgun: 20,\n      firearmsRifle: 20,\n      firearmsAutomatic: 10,\n      firstAid: 30,\n      history: 5,\n      intimidate: 15,\n      jump: 20,\n      language: 50,\n      law: 5,\n      libraryUse: 20,\n      listen: 25,\n      locksmith: 1,\n      mechanicalRepair: 10,\n      medicine: 1,\n      naturalWorld: 10,\n      navigate: 10,\n      occult: 5,\n      persuade: 10,\n      pilot: 1,\n      psychology: 10,\n      psychoanalysis: 1,\n      science: 1,\n      sleightOfHand: 10,\n      spotHidden: 25,\n      stealth: 20,\n      survival: 10,\n      swim: 20,\n      throw: 20,\n      track: 10,\n    }\n  }\n}\n\nexport interface InvestigatorBaseInfo {\n  name: string\n  occupation: string\n  player: string\n  birthplace: string\n  sex: string\n  age: number\n  avatarUrl: string\n}\n\nexport interface InvestigatorStats {\n  baseStats: InvestigatorBaseStats\n  specialStats: InvestigatorSpecialStats\n}\n\nexport interface InvestigatorSpecialStats {\n  luck: number\n  damageBonus: number | Dice\n  magicPoints: number\n  currentMagic: number\n  health: number\n  currentHealth: number\n  sanityPoints: number\n  build: number\n  moveRate: number\n}\n\nexport interface InvestigatorBaseStats {\n  strength: number\n  dexterity: number\n  intelligence: number\n  constitution: number\n  appearance: number\n  power: number\n  size: number\n  sanity: number\n  education: number\n}\nexport interface InvestigatorSkills {\n  specialSkills?: {\n    [key: string]: number\n  }\n  accounting: number\n  anthropology: number\n  appraise: number\n  archaeology: number\n  art: number\n  charm: number\n  climb: number\n  creditRating: number\n  cthulhuMythos: number\n  disguise: number\n  dodge: number\n  driveAuto: number\n  electricRepair: number\n  fastTalk: number\n  fighting: number\n  firearmsHandgun: number\n  firearmsShotgun: number\n  firearmsRifle: number\n  firearmsAutomatic: number\n  firstAid: number\n  history: number\n  intimidate: number\n  jump: number\n  language: number\n  law: number\n  libraryUse: number\n  listen: number\n  locksmith: number\n  mechanicalRepair: number\n  medicine: number\n  naturalWorld: number\n  navigate: number\n  occult: number\n  persuade: number\n  pilot: number\n  psychology: number\n  psychoanalysis: number\n  science: number\n  sleightOfHand: number\n  spotHidden: number\n  stealth: number\n  survival: number\n  swim: number\n  throw: number\n  track: number\n}\n\nexport interface InvestigatorWeapon {\n  name: string\n  checks: {\n    regular: number\n    hard: number\n    extreme: number\n  }\n  damage: DicePool\n}","export const customThemeProps = {\n  colors: {\n    blueishGray: '#2D383D',\n    waterGreen: '#315c4a',\n  }\n}","import React, { ChangeEvent } from \"react\";\nimport { Box, Grid, TextField, Typography, makeStyles } from \"@material-ui/core\";\nimport {\n  InvestigatorStats,\n  InvestigatorBaseStats,\n  InvestigatorSpecialStats,\n} from \"../../models/COCInvestigator/COCInvestigator\";\nimport { TypographyVariant } from \"../../utils/TypographyVariant\";\nimport { customThemeProps } from \"../../config/customThemeProps\";\nimport { theme } from \"../../config/theme\";\n\nexport interface CharacterBaseStatsProps {\n  baseStats: InvestigatorBaseStats;\n  specialStats: InvestigatorSpecialStats;\n  setStats: (\n    propName: string\n  ) => (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void;\n}\nconst specialStatNames = [\n  {\n    label: \"luck\",\n    id: \"luck\",\n  },\n  {\n    label: \"dmg bonus\",\n    id: \"damageBonus\",\n  },\n  {\n    label: \"build\",\n    id: \"build\",\n  },\n  {\n    label: \"move rate\",\n    id: \"moveRate\",\n  },\n];\n\nconst statNames = [\n  {\n    label: \"STR\",\n    id: \"strength\",\n  },\n  {\n    label: \"DEX\",\n    id: \"dexterity\",\n  },\n  {\n    label: \"INT\",\n    id: \"intelligence\",\n  },\n  {\n    label: \"CON\",\n    id: \"constitution\",\n  },\n  {\n    label: \"APP\",\n    id: \"appearance\",\n  },\n  {\n    label: \"POW\",\n    id: \"power\",\n  },\n  {\n    label: \"SIZ\",\n    id: \"size\",\n  },\n  {\n    label: \"SAN\",\n    id: \"sanity\",\n  },\n  {\n    label: \"EDU\",\n    id: \"education\",\n  },\n];\nexport const CharacterBaseStats: React.FC<CharacterBaseStatsProps> = ({\n  baseStats,\n  specialStats,\n  setStats,\n}) => {\n\n  const useStyles = makeStyles({\n    root: {\n      \"& .MuiOutlinedInput-root\": {\n        backgroundColor: \"#232323\",\n        color: \"#fff\",\n      },\n      \"& .MuiInputLabel-root\": {\n        color: \"#fff\",\n      },\n    },\n  });\n  const classes = useStyles()\n\n  return (\n    <Box\n      height=\"100%\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"space-between\"\n    >\n      <Box display=\"flex\" flexDirection=\"column\">\n        <Typography variant={TypographyVariant.H4} color=\"textPrimary\">\n          {\"Base Attributes\"}\n        </Typography>\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          borderRadius=\"4px\"\n          border={`2px solid black`}\n          padding=\"16px\"\n          bgcolor={theme.palette.background.paper}\n        >\n          <Grid container spacing={1}>\n            {statNames.map((statName) => {\n              return (\n                <Grid item md={4}>\n                  <Box display=\"flex\">\n                    <Box display=\"flex\" mr=\"4px\">\n                      <TextField\n                        label={statName.label}\n                        //@ts-ignore\n                        value={baseStats[statName.id]}\n                        onChange={setStats(statName.id)}\n                        variant={\"outlined\"}\n                      />\n                    </Box>\n                    <Box display=\"flex\" flexDirection=\"column\">\n                      <Box\n                        border={`1px solid ${customThemeProps.colors.waterGreen}`}\n                        borderRadius=\"4px\"\n                        px=\"1px\"\n                        mb=\"2px\"\n                        display=\"flex\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        width=\"24px\"\n                      >\n                        <Typography variant={TypographyVariant.BODY1} color=\"textPrimary\">\n                          {\n                            // @ts-ignore\n                            Math.floor(baseStats[statName.id] / 2)\n                          }\n                        </Typography>\n                      </Box>\n                      <Box\n                        border={`1px solid ${customThemeProps.colors.waterGreen}`}\n                        borderRadius=\"4px\"\n                        px=\"1px\"\n                        display=\"flex\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        width=\"24px\"\n                      >\n                        <Typography variant={TypographyVariant.BODY1} color=\"textPrimary\">\n                          {\n                            // @ts-ignore\n                            Math.floor(baseStats[statName.id] / 5)\n                          }\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </Box>\n                </Grid>\n              );\n            })}\n          </Grid>\n        </Box>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" mt={2}>\n        <Typography variant={TypographyVariant.H4} color=\"textPrimary\">\n          {\"Special Attributes\"}\n        </Typography>\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          borderRadius=\"4px\"\n          border={`2px solid black`}\n          padding=\"16px\"\n          bgcolor={theme.palette.background.paper}\n        >\n          <Grid container spacing={1}>\n            {specialStatNames.map((stat) => {\n              return (\n                <Grid item md={6}>\n                  <TextField\n                    label={stat.label}\n                    //@ts-ignore\n                    value={specialStats[stat.id]}\n                    variant={\"outlined\"}\n                    classes={{root: classes.root}}\n                    onChange={(e) => {\n                      return;\n                    }}\n                  />\n                </Grid>\n              );\n            })}\n          </Grid>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n","import { Dice, DiceType } from \"../models/Dice\"\n\nexport const MoveRateCalculator = (str: number, dex: number, siz: number, age: number) => {\n  let moveRate = 0\n  if((str < siz) && (dex < siz)) {\n    moveRate = 7\n  } else if ((str > siz) && (dex > siz)) {\n    moveRate = 9\n  } else {\n    moveRate = 8\n  }\n\n  if(age >= 80) {\n    moveRate += -5\n  } else if(age >= 70) {\n    moveRate += -4\n  } else if(age >= 60) {\n    moveRate += -3\n  } else if(age >= 50) {\n    moveRate += -2\n  } else if(age >= 40) {\n    moveRate += -1\n  }\n  return moveRate\n}\n\nexport const DamageBonusAndBuildCalculator = (str: number, siz: number) => {\n\n  const value = str + siz\n  if(value <= 64) {\n    return {db: -2, build: -2}\n  } else if(value <= 84) {\n    return {db: -1, build: -1}\n  } else if(value <= 124) {\n    return {db: 0, build: 0}\n  } else if(value <= 164) {\n    return {db: new Dice(DiceType.d4), build: 1}\n  } else if(value <= 204) {\n    return {db: new Dice(DiceType.d6), build: 2}\n  } else if(value <= 284) {\n    return {db: new Dice(DiceType.d6, 2), build: 3}\n  } else if(value <= 364) {\n    return {db: new Dice(DiceType.d6, 3), build: 4}\n  } else {\n    return {db: new Dice(DiceType.d6, 4), build: 5}\n  }\n}","export enum InvestigatorSkillTypes {\n  accounting = 'accounting',\n  anthropology = 'anthropology',\n  appraise = 'appraise',\n  archaeology = 'archaeology',\n  art = 'art',\n  charm = 'charm',\n  climb = 'climb',\n  creditRating = 'creditRating',\n  cthulhuMythos = 'cthulhuMythos',\n  disguise = 'disguise',\n  dodge = 'dodge',\n  driveAuto = 'driveAuto',\n  electricRepair = 'electricRepair',\n  fastTalk = 'fastTalk',\n  fighting = 'fighting',\n  firearmsHandgun = 'firearmsHandgun',\n  firearmsRifle = 'firearmsRifle',\n  firearmsShotgun = 'firearmsShotgun',\n  firearmsAutomatic = 'firearmsAutomatic',\n  firstAid = 'firstAid',\n  history = 'history',\n  intimidate = 'intimidate',\n  jump = 'jump',\n  law = 'law',\n  language = 'language',\n  libraryUse = 'libraryUse',\n  listen = 'listen',\n  locksmith = 'locksmith',\n  mechanicalRepair = 'mechanicalRepair',\n  medicine = 'medicine',\n  naturalWorld = 'naturalWorld',\n  navigate = 'navigate',\n  occult = 'occult',\n  persuade = 'persuade',\n  pilot = 'pilot',\n  psychology = 'psychology',\n  psychoanalysis = 'psychoanalysis',\n  science = 'science',\n  sleightOfHand = 'sleightOfHand',\n  spotHidden = 'spotHidden',\n  stealth = 'stealth',\n  survival = 'survival',\n  swim = 'swim',\n  throw = 'throw',\n  track = 'track',\n}\n\nexport enum InvestigatorSkillTypeNames {\n  accounting = 'Accounting',\n  anthropology = 'Anthropology',\n  appraise = 'Appraise',\n  archaeology = 'Archaeology',\n  art = 'Art',\n  charm = 'Charm',\n  climb = 'Climb',\n  creditRating = 'Credit Rating',\n  cthulhuMythos = 'Cthulhu Mythos',\n  disguise = 'Disguise',\n  dodge = 'Dodge',\n  driveAuto = 'Drive Auto',\n  electricRepair = 'Electric Repair',\n  fastTalk = 'Fast Talk',\n  fighting = 'Fighting',\n  firearmsHandgun = 'Handgun',\n  firearmsRifle = 'Rifle',\n  firearmsShotgun = 'Shotgun',\n  firearmsAutomatic = 'Auto Rifle',\n  firstAid = 'First Aid',\n  history = 'History',\n  intimidate = 'Intimidate',\n  jump = 'Jump',\n  law = 'Law',\n  language = 'Language',\n  libraryUse = 'Library Use',\n  listen = 'Listen',\n  locksmith = 'Locksmith',\n  mechanicalRepair = 'Mech. Repair',\n  medicine = 'Medicine',\n  naturalWorld = 'Natural World',\n  navigate = 'Navigate',\n  occult = 'Occult',\n  persuade = 'Persuade',\n  pilot = 'Pilot',\n  psychology = 'Psychology',\n  psychoanalysis = 'Psychoanalysis',\n  science = 'Science',\n  sleightOfHand = 'Sleight of Hand',\n  spotHidden = 'Spot Hidden',\n  stealth = 'Stealth',\n  survival = 'Survival',\n  swim = 'Swim',\n  throw = 'Throw',\n  track = 'Track',\n}","import { InvestigatorSkillTypes } from \"./InvestigatorSkills\";\n\nexport enum InvestigatorStatTypes {\n  education = 'education',\n  strength = 'strength',\n  dexterity = 'dexterity',\n  intelligence = 'intelligence',\n  constituition = 'constituition',\n  appearance = 'appearance',\n  power = 'power',\n  size = 'size',\n  sanity = 'sanity',\n}\n\nexport interface InvestigatorOccupation {\n  name: string\n  description: string\n  skillPoints: {\n    type: InvestigatorStatTypes,\n    multiplier: number,\n  }[]\n  creditRating: {\n    min: number,\n    max: number,\n  }\n  suggestedContacts: string[]\n  skills: InvestigatorSkillTypes[]\n  extraSkillTypes: number\n  interpersonalSkills: number\n  optionalSkillPoints?: {\n    type: InvestigatorStatTypes,\n    multiplier: number,\n  }[]\n}\n\n// TODO separate types of pilot, driver, laborer, photographer\n// TODO make two endpoints: one for fetching all occupation names and one for getting a specific occupation\nexport const occupationNames: string[] = [\n  'Accountant',\n  'Acrobat',\n  'Actor (Film Star)',\n  'Actor (Stage Actor)',\n  'Agency Detective',\n  'Alienist (Classic)',\n  'Animal Trainer',\n  'Antiquarian (Lovecraftian)',\n  'Antique Dealer',\n  'Archaeologist (Lovecraftian',\n  'Architect',\n  'Artist',\n  'Asylum Attendant',\n  'Athlete',\n  'Author (Lovecraftian)',\n  'Bartender',\n  'Big Game Hunter',\n  'Book Dealer',\n  'Bounty Hunter',\n  'Boxer/Wrestler',\n  'Butler',\n  'Clergy, Member of the',\n  'Cowboy/girl',\n  'Craftsperson',\n  'Criminal (Assassin)',\n  'Criminal (Bank Robber)',\n  'Criminal (Bootlegger)',\n  'Criminal (Burglar)',\n  'Criminal (Conman)',\n  'Criminal (Gangster)',\n  'Criminal (Fence)',\n  'Criminal (Forger/Counterfeiter)',\n  'Criminal (Gun Moll)',\n  'Criminal (Smuggler)',\n  'Criminal (Street Punk)',\n  'Criminal (Thug)',\n  'Cult Leader',\n  'Designer',\n  'Dilettante (Lovecraftian)',\n  'Diver',\n  'Drifter',\n  'Driver',\n  'Driver (Chauffeur)',\n  'Driver (Taxi Driver)',\n  'Editor',\n  'Elected Official',\n  'Engineer',\n  'Entertainer',\n  'Explorer (Classic)',\n  'Farmer',\n  'Federal Agent',\n  'Firefighter',\n  'Foreign Correspondent',\n  'Forensic Surgeon',\n  'Gambler',\n  'Gentleman/lady',\n  'Hobo',\n  'Hospital Orderly',\n  'Journalist (Investigative Journalist)',\n  'Journalist (Reporter)',\n  'Laboratory Assistant',\n  'Laborer (Unskilled)',\n  'Laborer (Lumberjack)',\n  'Laborer (Miner)',\n  'Lawyer',\n  'Librarian (Lovecraftian)',\n\n]\n\nexport const occupations: InvestigatorOccupation[] = [\n  {\n    name: 'Accountant',\n    description: 'Either employed within a business or working as a freelance consultant with a portfolio of self-employed clients or businesses. Diligence and an attention to detail means that most accountants can make good researchers, being able to support investigations through the careful analysis of personal and business transactions, financial statements, and other records.',\n    creditRating: {\n      min: 30,\n      max: 70,\n    },\n    skillPoints: [\n      {\n        type: InvestigatorStatTypes.education,\n        multiplier: 4,\n      }\n    ],\n    skills: [\n      InvestigatorSkillTypes.accounting,\n      InvestigatorSkillTypes.law,\n      InvestigatorSkillTypes.libraryUse,\n      InvestigatorSkillTypes.persuade,\n      InvestigatorSkillTypes.spotHidden,\n      InvestigatorSkillTypes.creditRating,\n    ],\n    extraSkillTypes: 2,\n    interpersonalSkills: 0,\n    suggestedContacts: [\n      'Business associates',\n      'Legal Professions',\n      'Financial sector',\n    ],\n  },\n  {\n    name: 'Acrobat',\n    description: 'Acrobats may be either amateur athletes competing in staged meets—possibly even the Olympics—or professionals employed with the entertainment sector (e.g. circuses, carnivals, theatrical performances).',\n    creditRating: {\n      min: 9,\n      max: 20,\n    },\n    skillPoints: [\n      {\n        type: InvestigatorStatTypes.education,\n        multiplier: 2,\n      },\n      {\n        type: InvestigatorStatTypes.dexterity,\n        multiplier: 2,\n      }\n    ],\n    skills: [\n      InvestigatorSkillTypes.climb,\n      InvestigatorSkillTypes.dodge,\n      InvestigatorSkillTypes.jump,\n      InvestigatorSkillTypes.throw,\n      InvestigatorSkillTypes.spotHidden,\n      InvestigatorSkillTypes.swim,\n      InvestigatorSkillTypes.creditRating,\n    ],\n    extraSkillTypes: 2,\n    interpersonalSkills: 0,\n    suggestedContacts: [\n      'Amateur athletic circles',\n      'Sports writers',\n      'Circuses',\n      'Carnivals',\n    ],\n  },\n  {\n    name: 'Actor (Film Star)',\n    description: 'Movie stars and the film industry have long captured the interest of people across the world. Many stars are made overnight and most of them lead flashy, high profile lives, ever in the media spotlight.',\n    creditRating: {\n      min: 20,\n      max: 90,\n    },\n    skillPoints: [\n      {\n        type: InvestigatorStatTypes.education,\n        multiplier: 2,\n      },\n      {\n        type: InvestigatorStatTypes.appearance,\n        multiplier: 2,\n      }\n    ],\n    skills: [\n      InvestigatorSkillTypes.art,\n      InvestigatorSkillTypes.disguise,\n      InvestigatorSkillTypes.driveAuto,\n      InvestigatorSkillTypes.psychology,\n      InvestigatorSkillTypes.creditRating,\n    ],\n    extraSkillTypes: 2,\n    interpersonalSkills: 2,\n    suggestedContacts: [\n      'Film industry',\n      'Media critics',\n      'Writers',\n    ],\n  },\n  {\n    name: 'Actor (Stage Actor)',\n    description: 'Many stage actors have a background in the classics and, considering themselves “legitimate,” have a tendency to look down upon the commercial efforts of the film industry, although by the late twentieth century this is diminished, with film actors able to command greater respect and higher fees.',\n    creditRating: {\n      min: 9,\n      max: 40,\n    },\n    skillPoints: [\n      {\n        type: InvestigatorStatTypes.education,\n        multiplier: 2,\n      },\n      {\n        type: InvestigatorStatTypes.appearance,\n        multiplier: 2,\n      }\n    ],\n    skills: [\n      InvestigatorSkillTypes.art,\n      InvestigatorSkillTypes.disguise,\n      InvestigatorSkillTypes.fighting,\n      InvestigatorSkillTypes.history,\n      InvestigatorSkillTypes.psychology,\n      InvestigatorSkillTypes.creditRating,\n    ],\n    extraSkillTypes: 1,\n    interpersonalSkills: 2,\n    suggestedContacts: [\n      'Theatre industry',\n      'Newspaper art critics',\n      'Actors\\' guild',\n    ],\n  },  \n  {\n    name: 'Agency Detective',\n    description: 'Numerous well-known detective agencies exist around the world, with probably the most famous being the Pinkerton and Burns agencies (merged into one in modern times). Large agencies employ two types of agents: security guards and operatives. Guards are uniformed patrolmen, hired by companies and individuals to protect property and people against burglars, assassins and kidnappers. Use the Uniformed Police Officer’s description for these characters. Company Operatives are plainclothes detectives, sent out on cases requiring them to solve mysteries, prevent murders, locate missing people, and so on.',\n    creditRating: {\n      min: 20,\n      max: 45,\n    },\n    skillPoints: [\n      {\n        type: InvestigatorStatTypes.education,\n        multiplier: 2,\n      },\n    ],\n    optionalSkillPoints: [\n      {\n        type: InvestigatorStatTypes.strength,\n        multiplier: 2,\n      },\n      {\n        type: InvestigatorStatTypes.dexterity,\n        multiplier: 2,\n      },\n    ],\n    skills: [\n      InvestigatorSkillTypes.fighting,\n      InvestigatorSkillTypes.firearmsHandgun,\n      InvestigatorSkillTypes.firearmsShotgun,\n      InvestigatorSkillTypes.law,\n      InvestigatorSkillTypes.libraryUse,\n      InvestigatorSkillTypes.psychology,\n      InvestigatorSkillTypes.stealth,\n      InvestigatorSkillTypes.track,\n      InvestigatorSkillTypes.creditRating,\n    ],\n    extraSkillTypes: 0,\n    interpersonalSkills: 1,\n    suggestedContacts: [\n      'Local law enforcement',\n      'Clients',\n    ],\n  },\n  {\n    name: 'Alienist (Classic)',\n    description: 'In the 1920s, \"alienist\" is the term given for those who treat mental illness (early psychiatrists). Psychoanalysis is barely known in the U.S., and its basis in sexual life and toilet training is felt to be indecent. Psychiatry, a standard medical education augmented by behaviorism, is more common. Intellectual wars rage between alienists, psychiatrists, and neurologists.',\n    creditRating: {\n      min: 10,\n      max: 60,\n    },\n    skillPoints: [\n      {\n        type: InvestigatorStatTypes.education,\n        multiplier: 4,\n      },\n    ],\n    skills: [\n      InvestigatorSkillTypes.law,\n      InvestigatorSkillTypes.listen,\n      InvestigatorSkillTypes.medicine,\n      InvestigatorSkillTypes.language,\n      InvestigatorSkillTypes.psychoanalysis,\n      InvestigatorSkillTypes.psychology,\n      InvestigatorSkillTypes.science,\n      InvestigatorSkillTypes.creditRating,\n    ],\n    extraSkillTypes: 0,\n    interpersonalSkills: 0,\n    suggestedContacts: [\n      'Others in the field of mental illness',\n      'Medical doctors',\n      'Detectives in law enforcement',\n    ],\n  },\n  {\n    name: 'Animal Trainer',\n    description: 'May be employed by film studios, a travelling circus, a horse stable, or possibly working freelance. Whether training guide dogs for the blind or teaching a lion to jump through a flaming hoop, the animal trainer usually works alone, spending long hours in close proximity with the animals in their care. An animal trainer can use the Psychology skill with animals as well as people.',\n    creditRating: {\n      min: 10,\n      max: 40,\n    },\n    skillPoints: [\n      {\n        type: InvestigatorStatTypes.education,\n        multiplier: 2,\n      },\n    ],\n    optionalSkillPoints: [\n      {\n        type: InvestigatorStatTypes.appearance,\n        multiplier: 2,\n      },\n      {\n        type: InvestigatorStatTypes.power,\n        multiplier: 2,\n      },\n    ],\n    skills: [\n      InvestigatorSkillTypes.jump,\n      InvestigatorSkillTypes.listen,\n      InvestigatorSkillTypes.naturalWorld,\n      InvestigatorSkillTypes.psychology,\n      InvestigatorSkillTypes.science,\n      InvestigatorSkillTypes.stealth,\n      InvestigatorSkillTypes.track,\n      InvestigatorSkillTypes.creditRating,\n    ],\n    extraSkillTypes: 1,\n    interpersonalSkills: 0,\n    suggestedContacts: [\n      'Zoos',\n      'Circus folk',\n      'Patrons',\n      'Actors',\n    ],\n  },\n  {\n    name: 'Antiquarian (Lovecraftian)',\n    description: 'A person who delights in the timeless excellence of design and execution, and in the power of ancient lore. Probably the most Lovecraft-like occupation available to an investigator. An independent income allows the antiquarian to explore things old and obscure, perhaps sharpening their focus down particular lines of enquiry based on personal preference and interest. Usually a person with an appreciative eye and a swift mind, who frequently finds mordant or contemptuous humor in the foolishness of the ignorant, the pompous, and the greedy.',\n    creditRating: {\n      min: 30,\n      max: 70,\n    },\n    skillPoints: [\n      {\n        type: InvestigatorStatTypes.education,\n        multiplier: 4,\n      },\n    ],\n    skills: [\n      InvestigatorSkillTypes.appraise,\n      InvestigatorSkillTypes.art,\n      InvestigatorSkillTypes.history,\n      InvestigatorSkillTypes.libraryUse,\n      InvestigatorSkillTypes.language,\n      InvestigatorSkillTypes.spotHidden,\n      InvestigatorSkillTypes.creditRating,\n    ],\n    extraSkillTypes: 1,\n    interpersonalSkills: 1,\n    suggestedContacts: [\n      'Booksellers',\n      'Antique collectors',\n      'Historical societies',\n    ],\n  },\n  {\n    name: 'Antique Dealer',\n    description: 'Antique dealers usually own their own shop, retail items out of their homes, or go on extended buying trips, making a profit on reselling to urban stores.',\n    creditRating: {\n      min: 30,\n      max: 50,\n    },\n    skillPoints: [\n      {\n        type: InvestigatorStatTypes.education,\n        multiplier: 4,\n      },\n    ],\n    skills: [\n      InvestigatorSkillTypes.accounting,\n      InvestigatorSkillTypes.appraise,\n      InvestigatorSkillTypes.driveAuto,\n      InvestigatorSkillTypes.history,\n      InvestigatorSkillTypes.libraryUse,\n      InvestigatorSkillTypes.navigate,\n      InvestigatorSkillTypes.creditRating,\n    ],\n    extraSkillTypes: 0,\n    interpersonalSkills: 2,\n    suggestedContacts: [\n      'Local historians',\n      'Other antique dealers',\n      'Criminal fences',\n    ],\n  },\n]","export enum HttpMethod {\n  POST = 'POST',\n  GET = 'GET',\n  PUT = 'PUT',\n  DELETE = 'DELETE',\n}","import React, { ChangeEvent } from \"react\";\nimport {\n  Box,\n  TextField,\n  Typography,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { TypographyVariant } from \"../../utils/TypographyVariant\";\nimport {\n  occupationNames,\n  InvestigatorOccupation,\n} from \"../../models/COCInvestigator/InvestigatorOccupations\";\nimport {\n  InvestigatorSkillTypeNames,\n} from \"../../models/COCInvestigator/InvestigatorSkills\";\nimport { theme } from \"../../config/theme\";\n\nexport interface CharacterOccupationProps {\n  occupation: InvestigatorOccupation | undefined;\n  setOccupation: (\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => void;\n}\n\nconst getOccupationSkillsString = (occupation: InvestigatorOccupation) => {\n  const skillNames = occupation.skills.map(\n    (skill) => InvestigatorSkillTypeNames[skill]\n  );\n  let st = skillNames.join(\", \");\n  if (occupation.interpersonalSkills > 0) {\n    if (occupation.interpersonalSkills === 1) {\n      st = st.concat(\n        \", 1 interpersonal skill (Charm, Fast Talk, Intimidate or Persuade)\"\n      );\n    } else {\n      st = st.concat(\n        `, ${occupation.interpersonalSkills} interpersonal skills (Charm, Fast Talk, Intimidate or Persuade)`\n      );\n    }\n  }\n  if (occupation.extraSkillTypes > 0) {\n    if (occupation.extraSkillTypes === 1) {\n      st = st.concat(\", any 1 other skill as personal or era specialty\");\n    } else {\n      st = st.concat(\n        `, any ${occupation.extraSkillTypes} other skills as personal or era specialties`\n      );\n    }\n  }\n  return st;\n};\n\nconst getOccupationSkillPointsString = (occupation: InvestigatorOccupation) => {\n  let st = occupation.skillPoints.reduce(\n    (acc: string, current) =>\n      acc.concat(`${current.type} x ${current.multiplier} + `),\n    \"\"\n  );\n  if (\n    occupation.optionalSkillPoints &&\n    occupation.optionalSkillPoints.length > 1\n  ) {\n    st = st.concat(\n      `( ${occupation.optionalSkillPoints[0].type} x ${occupation.optionalSkillPoints[0].multiplier} or ${occupation.optionalSkillPoints[1].type} x ${occupation.optionalSkillPoints[1].multiplier} )`\n    );\n  } else {\n    st = st.slice(0, st.length - 2);\n  }\n  return st;\n};\n\nexport const CharacterOccupation: React.FC<CharacterOccupationProps> = ({\n  occupation,\n  setOccupation,\n}) => {\n\n  return (\n    <Box\n      height=\"100%\"\n      display=\"flex\"\n      flex={1}\n      flexDirection=\"column\"\n      justifyContent=\"space-between\"\n    >\n      <Box display=\"flex\" flexDirection=\"column\">\n        <Typography variant={TypographyVariant.H4} color=\"textPrimary\">{\"Occupation\"}</Typography>\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          borderRadius=\"4px\"\n          border={`2px solid black`}\n          padding=\"16px\"\n          bgcolor={theme.palette.background.paper}\n        >\n          <Box display=\"flex\" flex={1}>\n            <Box display=\"flex\" flex={1}>\n              <TextField\n                select\n                label=\"Choose occupation\"\n                value={occupation?.name}\n                onChange={setOccupation}\n                fullWidth\n              >\n                {occupationNames.map((name) => {\n                  return (\n                    <MenuItem key={name} value={name}>\n                      {name}\n                    </MenuItem>\n                  );\n                })}\n              </TextField>\n            </Box>\n            <Box display=\"flex\" flex={5} alignItems=\"flex-end\" ml={2}>\n              <Typography variant={TypographyVariant.OVERLINE} color={\"error\"}>\n                {\n                  \"Warning: changing occupation or base stats resets currently allocated skill points\"\n                }\n              </Typography>\n            </Box>\n          </Box>\n          <Box display=\"flex\" mt={2}>\n            <Box display=\"flex\" flexDirection=\"column\" flex={1} mr={2}>\n              <Typography variant={TypographyVariant.OVERLINE} color=\"textSecondary\">\n                {\"Description\"}\n              </Typography>\n              <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                borderRadius=\"4px\"\n                border={`1px solid rgb(118, 118, 118)`}\n                padding=\"8px\"\n              >\n                <Typography variant={TypographyVariant.BODY2} color=\"textPrimary\">\n                  {occupation?.description}\n                </Typography>\n              </Box>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"column\" flex={1} mr={2}>\n              <Box display=\"flex\" flexDirection=\"column\">\n                <Typography variant={TypographyVariant.OVERLINE} color=\"textSecondary\">\n                  {\"Occupation skill points\"}\n                </Typography>\n                <Box\n                  display=\"flex\"\n                  flexDirection=\"column\"\n                  borderRadius=\"4px\"\n                  border={`1px solid rgb(118, 118, 118)`}\n                  padding=\"8px\"\n                  mb={1}\n                >\n                  <Typography variant={TypographyVariant.BODY2} color=\"textPrimary\">\n                    {occupation\n                      ? getOccupationSkillPointsString(occupation)\n                      : \"\"}\n                  </Typography>\n                </Box>\n              </Box>\n              <Box display=\"flex\" flexDirection=\"column\">\n                <Typography variant={TypographyVariant.OVERLINE} color=\"textSecondary\">\n                  {\"Credit Rating\"}\n                </Typography>\n                <Box\n                  display=\"flex\"\n                  flexDirection=\"column\"\n                  borderRadius=\"4px\"\n                  border={`1px solid rgb(118, 118, 118)`}\n                  padding=\"8px\"\n                >\n                  <Typography variant={TypographyVariant.BODY2} color=\"textPrimary\">\n                    {`min: ${occupation?.creditRating.min} max: ${occupation?.creditRating.max}`}\n                  </Typography>\n                </Box>\n              </Box>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"column\" flex={1}>\n              <Box display=\"flex\" flexDirection=\"column\">\n                <Typography variant={TypographyVariant.OVERLINE} color=\"textSecondary\">\n                  {\"Suggested Contacts\"}\n                </Typography>\n                <Box\n                  display=\"flex\"\n                  flexDirection=\"column\"\n                  borderRadius=\"4px\"\n                  border={`1px solid rgb(118, 118, 118)`}\n                  padding=\"8px\"\n                  mb={1}\n                >\n                  <Typography variant={TypographyVariant.BODY2} color=\"textPrimary\">\n                    {occupation?.suggestedContacts.join(\", \")}\n                  </Typography>\n                </Box>\n              </Box>\n              <Box display=\"flex\" flexDirection=\"column\">\n                <Typography variant={TypographyVariant.OVERLINE} color=\"textSecondary\">\n                  {\"Available Skills\"}\n                </Typography>\n                <Box\n                  display=\"flex\"\n                  flexDirection=\"column\"\n                  borderRadius=\"4px\"\n                  border={`1px solid rgb(118, 118, 118)`}\n                  padding=\"8px\"\n                >\n                  <Typography variant={TypographyVariant.BODY2} color=\"textPrimary\">\n                    {occupation ? getOccupationSkillsString(occupation) : \"\"}\n                  </Typography>\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n","import React, { ChangeEvent } from \"react\";\nimport {\n  Box,\n  Grid,\n  TextField,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport {\n  InvestigatorBaseStats,\n  InvestigatorSkills,\n  COCInvestigator,\n} from \"../../models/COCInvestigator/COCInvestigator\";\nimport { TypographyVariant } from \"../../utils/TypographyVariant\";\nimport { customThemeProps } from \"../../config/customThemeProps\";\nimport { InvestigatorOccupation } from \"../../models/COCInvestigator/InvestigatorOccupations\";\nimport {\n  InvestigatorSkillTypes,\n  InvestigatorSkillTypeNames,\n} from \"../../models/COCInvestigator/InvestigatorSkills\";\nimport { theme } from \"../../config/theme\";\n\nexport interface CharacterOccupationAndSkillsProps {\n  skills: InvestigatorSkills;\n  stats: InvestigatorBaseStats;\n  setSkill: (propName: string, newSkill: number) => void;\n  totalOccupationSkillPoints: number;\n  remainingOccupationSkillPoints: number;\n  setRemainingOccupationSkillPoints: (state: number) => void;\n  totalHobbieSkillPoints: number;\n  remainingHobbieSkillPoints: number;\n  setRemainingHobbieSkillPoints: (state: number) => void;\n  occupation: InvestigatorOccupation | undefined;\n}\nconst baselineInvestigator = new COCInvestigator();\nlet skillsOldState = baselineInvestigator.skills;\n\nconst interpersonalSkills = [\"charm\", \"fastTalk\", \"intimidate\", \"persuade\"];\n\nconst shouldHighlightSkill = (\n  skill: string,\n  occupation?: InvestigatorOccupation\n) => {\n  if (occupation) {\n    if (occupation.interpersonalSkills > 0) {\n      if (interpersonalSkills.indexOf(skill) >= 0) {\n        return true;\n      }\n    }\n    if (occupation.skills.indexOf(skill as InvestigatorSkillTypes) >= 0) {\n      return true;\n    }\n    if (skill === InvestigatorSkillTypes.creditRating) {\n      return true;\n    }\n    return false;\n  } else {\n    return false;\n  }\n};\n\nexport const CharacterSkills: React.FC<CharacterOccupationAndSkillsProps> = ({\n  skills,\n  stats,\n  setSkill,\n  remainingHobbieSkillPoints,\n  remainingOccupationSkillPoints,\n  totalOccupationSkillPoints,\n  occupation,\n  setRemainingHobbieSkillPoints,\n  setRemainingOccupationSkillPoints,\n}) => {\n  const useHighlightedStyles = makeStyles({\n    root: {\n      \"& .MuiFilledInput-root\": {\n        backgroundColor: theme.palette.primary.main,\n        color: \"#fff\",\n      },\n      \"& .MuiInputLabel-root\": {\n        color: \"#fff\",\n      },\n    },\n  });\n\n  const useStyles = makeStyles({\n    root: {\n      \"& .MuiFilledInput-root\": {\n        backgroundColor: \"#121212\",\n      },\n    },\n  });\n\n  const highlightedClasses = useHighlightedStyles();\n  const classes = useStyles();\n\n  // ======================================== SKILL POINTS LOGIC ========================================\n  //TODO only let save if credit rating meets basic occupation requirements\n\n  //TODO fix logic here, theres some weird shenanigans going on\n  const handleChangeSkill = (skillName: string) => (\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    let newSkillValue = Number(event.target.value);\n    if (newSkillValue < 1) {\n      newSkillValue = 0;\n    } else if (newSkillValue > 100) {\n      newSkillValue = 100;\n    }\n    if (occupation) {\n      const oldSkillValue = skillsOldState[skillName as InvestigatorSkillTypes];\n      const pointVariation = newSkillValue - oldSkillValue;\n\n      //TODO add interpersonal skill treatment\n        //add to remaining points\n        if (occupation.skills.includes(skillName as InvestigatorSkillTypes)) {\n          setRemainingOccupationSkillPoints(\n            remainingOccupationSkillPoints - pointVariation\n          );\n        } else {\n          setRemainingHobbieSkillPoints(\n            remainingHobbieSkillPoints - pointVariation\n          );\n        }\n    }\n    skillsOldState[skillName as InvestigatorSkillTypes] = newSkillValue;\n    setSkill(skillName, newSkillValue);\n  };\n\n  // ===================================================================================================\n\n  return (\n    <Box mt={2}>\n      <Typography variant={TypographyVariant.H4} color=\"textPrimary\">\n        {\"Skills\"}\n      </Typography>\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        borderRadius=\"4px\"\n        border={`2px solid black`}\n        padding=\"16px\"\n        bgcolor={theme.palette.background.paper}\n      >\n        <Box>\n          <Typography\n            variant={TypographyVariant.H6}\n            color=\"textSecondary\"\n          >{`Total Occupation points: ${totalOccupationSkillPoints}`}</Typography>\n          <Typography\n            variant={TypographyVariant.H6}\n            color=\"textSecondary\"\n          >{`Remaining Occupation points: ${remainingOccupationSkillPoints}`}</Typography>\n          <Typography\n            variant={TypographyVariant.H6}\n            color=\"textPrimary\"\n          >{`Total Personal Interest points: ${\n            stats.intelligence * 2\n          }`}</Typography>\n          <Typography\n            variant={TypographyVariant.H6}\n            color=\"textPrimary\"\n          >{`Remaining Personal Interest points: ${remainingHobbieSkillPoints}`}</Typography>\n          <Box my={2}>\n            <Typography variant={TypographyVariant.OVERLINE} color={\"error\"}>\n              {\n                \"Occupation-specific skills will be highlighted green and allocated points will automatically be subtracted from total.\"\n              }\n            </Typography>\n            <div>\n              <Typography variant={TypographyVariant.OVERLINE} color={\"error\"}>\n                {\n                  \"Occupations with interpersonal skills will highlight those, so keep in mind the upper limit of skills of that type your occupation can have.\"\n                }\n              </Typography>\n            </div>\n          </Box>\n        </Box>\n        <Grid container>\n          {Object.keys(skills).map((skill) => {\n            return (\n              <Grid item md={2} key={skill}>\n                <Box m={1} display=\"flex\">\n                  <Box display=\"flex\" mr=\"4px\">\n                    <TextField\n                      //@ts-ignore\n                      label={InvestigatorSkillTypeNames[skill]}\n                      //@ts-ignore\n                      value={skills[skill]}\n                      variant={\"filled\"}\n                      classes={{\n                        root: shouldHighlightSkill(skill, occupation)\n                          ? highlightedClasses.root\n                          : classes.root,\n                      }}\n                      onChange={handleChangeSkill(skill)}\n                    />\n                  </Box>\n                  <Box display=\"flex\" flexDirection=\"column\">\n                    <Box\n                      border={`1px solid ${customThemeProps.colors.waterGreen}`}\n                      borderRadius=\"4px\"\n                      px=\"1px\"\n                      mb=\"2px\"\n                      display=\"flex\"\n                      justifyContent=\"center\"\n                      alignItems=\"center\"\n                      width=\"24px\"\n                    >\n                      <Typography\n                        variant={TypographyVariant.BODY1}\n                        color=\"textPrimary\"\n                      >\n                        {\n                          // @ts-ignore\n                          Math.floor(skills[skill] / 2)\n                        }\n                      </Typography>\n                    </Box>\n                    <Box\n                      border={`1px solid ${customThemeProps.colors.waterGreen}`}\n                      borderRadius=\"4px\"\n                      px=\"1px\"\n                      display=\"flex\"\n                      justifyContent=\"center\"\n                      alignItems=\"center\"\n                      width=\"24px\"\n                    >\n                      <Typography\n                        variant={TypographyVariant.BODY1}\n                        color=\"textPrimary\"\n                      >\n                        {\n                          // @ts-ignore\n                          Math.floor(skills[skill] / 5)\n                        }\n                      </Typography>\n                    </Box>\n                  </Box>\n                </Box>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Box>\n    </Box>\n  );\n};\n","export const endpointRoutes = {\n  createInvestigator: '/cthulhu/sheet/create',\n  editInvestigator: '/cthulhu/sheet/edit',\n  fetchInvestigator: '/cthulhu/sheet/get',\n}","import { COCInvestigator } from \"../../models/COCInvestigator/COCInvestigator\";\nimport { getAxiosInstance } from \"../getAxiosInstance\";\nimport { endpointRoutes } from \"./endpointRoutes\";\nimport { getBaseApiUrl } from \"../../config\";\nimport { HttpMethod } from \"../HTTPMethods\";\n\nconst fetcher = getAxiosInstance({baseURL: getBaseApiUrl()})\n\nexport const saveInvestigator = async (investigator: COCInvestigator) => {\n  await fetcher.request({\n    url: endpointRoutes.createInvestigator,\n    method: HttpMethod.POST,\n    data: investigator,\n  })\n}\n\nexport const editInvestigator = async (investigator: COCInvestigator) => {\n  await fetcher.request({\n    url: endpointRoutes.editInvestigator,\n    method: HttpMethod.PUT,\n    data: investigator,\n  })\n}\n\nexport const fetchInvestigator = async (id: string) => {\n  const res = await fetcher.request({\n    url: endpointRoutes.editInvestigator,\n    method: HttpMethod.PUT,\n    params: {\n      id,\n    },\n  })\n  return res.data as COCInvestigator\n}","import axios, { AxiosInstance, AxiosRequestConfig } from 'axios'\nimport {getBaseApiUrl} from '../config'\n\nexport const getAxiosInstance = (config: AxiosRequestConfig): AxiosInstance => {\n  return axios.create({\n    baseURL: getBaseApiUrl(),\n    ...config,\n  })\n}","//TODO set environment variables\nexport const getBaseApiUrl = () => {\n  return 'http://localhost:3001'\n}","import React, { useState, ChangeEvent, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  Box,\n  ThemeProvider,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n} from \"@material-ui/core\";\nimport { theme } from \"../../config/theme\";\nimport styled from \"styled-components\";\nimport { CharacterInfo } from \"./CharacterInfo\";\nimport { CharacterProfile } from \"./CharacterProfile\";\nimport {\n  COCInvestigator,\n  InvestigatorSpecialStats,\n  InvestigatorBaseStats,\n  InvestigatorSkills,\n} from \"../../models/COCInvestigator/COCInvestigator\";\nimport { CharacterBaseStats } from \"./CharacterBaseStats\";\nimport {\n  MoveRateCalculator,\n  DamageBonusAndBuildCalculator,\n} from \"../../utils/COCCalculators\";\nimport { CharacterOccupation } from \"./CharacterOccupation\";\nimport {\n  InvestigatorOccupation,\n  occupations,\n} from \"../../models/COCInvestigator/InvestigatorOccupations\";\nimport { CharacterSkills } from \"./CharacterSkills\";\nimport { saveInvestigator } from \"../../service/endpoints/investigatorEndpoints\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding: 88px;\n  background-color: ${theme.palette.background.default};\n`;\nconst baselineInvestigator = new COCInvestigator();\n\nconst getTotalOccupationSkillPoints = (\n  occupation: InvestigatorOccupation | undefined,\n  stats: InvestigatorBaseStats\n) => {\n  if (occupation) {\n    return occupation.skillPoints.reduce((acc, skill) => {\n      //@ts-ignore\n      const points = stats[skill.type] * skill.multiplier;\n      return acc + points;\n    }, 0);\n  } else {\n    return 0;\n  }\n};\n\nexport const CharacterCreatorPage: React.FC = () => {\n  // ======================================= STATE VARIABLES =======================================\n  const { characterId } = useParams();\n  const [character, setCharacter] = useState<COCInvestigator>(\n    new COCInvestigator()\n  );\n  const [baseStats, setBaseStats] = useState<InvestigatorBaseStats>(\n    character.stats.baseStats\n  );\n  const [specialStats, setSpecialStats] = useState<InvestigatorSpecialStats>(\n    character.stats.specialStats\n  );\n  const [skills, setSkills] = useState<InvestigatorSkills>(character.skills);\n  const [occupation, setOccupation] = useState<InvestigatorOccupation>();\n  const [remainingHobbiePoints, setRemainingHobbiePoints] = useState(\n    baseStats.intelligence * 2\n  );\n  const [totalOccupationSkillPoints, setTotalOccupationSkillPoints] = useState(\n    0\n  );\n  const [\n    remainingOccupationSkillPoints,\n    setRemainingOccupationSkillPoints,\n  ] = useState(0);\n  const [isErrorDialogOpen, setIsErrorDialogOpen] = useState(false);\n  const [errorMessages, setErrorMessages] = useState<string[]>([]);\n\n  // ======================================= SAVE CHARACTER FUNCTIONS =======================================\n\n  const handleCloseErrorDialog = () => setIsErrorDialogOpen(false);\n\n  useEffect(() => {\n    setCharacter({\n      ...character,\n      skills,\n      stats: {\n        baseStats,\n        specialStats,\n      },\n    })\n  }, [baseStats, skills, occupation, specialStats])\n\n  const onSaveCharacterClick = () => {\n    const latestErrorMessages: string[] = [];\n    if (!character.info.birthplace) {\n      latestErrorMessages.push(\"Fill a Birthplace\");\n    }\n    if (!character.info.name) {\n      latestErrorMessages.push(\"Fill a valid Name\");\n    }\n    if (!character.info.player) {\n      latestErrorMessages.push(\"Fill your Player Name\");\n    }\n    if (!character.info.sex) {\n      latestErrorMessages.push(\"Fill a Sex\");\n    }\n    if (!occupation) {\n      latestErrorMessages.push(\"Select a character Occupation\");\n    }\n    if (remainingHobbiePoints !== 0) {\n      latestErrorMessages.push(\n        \"Remaining personal interest skill points must equal to zero\"\n      );\n    }\n    if (remainingOccupationSkillPoints !== 0) {\n      latestErrorMessages.push(\n        \"Remaining occupation skill points must equal to zero\"\n      );\n    }\n\n    setErrorMessages(latestErrorMessages);\n    if (latestErrorMessages.length === 0) {\n      saveInvestigator(character)\n    } else {\n      setIsErrorDialogOpen(true);\n    }\n  };\n\n  // ======================================= AUTOMATIC CALCULATIONS =======================================\n\n  const calculateSpecialStats = () => {\n    const { db: damageBonus, build } = DamageBonusAndBuildCalculator(\n      baseStats.strength,\n      baseStats.size\n    );\n    setSpecialStats({\n      luck: specialStats.luck,\n      sanityPoints: baseStats.power,\n      magicPoints: Math.floor(baseStats.power / 5),\n      health: Math.floor(\n        (character.stats.baseStats.size + baseStats.constitution) / 10\n      ),\n      currentHealth: Math.floor((baseStats.size + baseStats.constitution) / 10),\n      moveRate: MoveRateCalculator(\n        baseStats.strength,\n        baseStats.dexterity,\n        baseStats.size,\n        character.info.age\n      ),\n      damageBonus,\n      build,\n      currentMagic: Math.floor(baseStats.power / 5),\n    });\n  };\n\n  useEffect(() => {\n    calculateSpecialStats();\n  }, [baseStats]);\n\n  // ======================================= STATE VARIABLE SETTERS =======================================\n\n  const setCharacterOccupation = (\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    const name = event.target.value;\n    if (name) {\n      const newOccupation = occupations.find((occ) => occ.name === name);\n      setOccupation(newOccupation);\n      setCharacter({\n        ...character,\n        info: {\n          ...character.info,\n          occupation: name,\n        },\n      });\n      const newTotal = getTotalOccupationSkillPoints(newOccupation, baseStats);\n      setTotalOccupationSkillPoints(newTotal);\n      setRemainingOccupationSkillPoints(newTotal);\n      setRemainingHobbiePoints(baseStats.intelligence * 2);\n      setSkills(baselineInvestigator.skills);\n    }\n  };\n\n  const setCharacterInfo = (propName: string) => (\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    if (propName === \"age\") {\n      const newAge = Number(event.target.value);\n      if (newAge || event.target.value === \"\") {\n        setCharacter({\n          ...character,\n          info: {\n            ...character.info,\n            [propName]: newAge,\n          },\n        });\n      }\n      return;\n    }\n    setCharacter({\n      ...character,\n      info: {\n        ...character.info,\n        [propName]: event.target.value,\n      },\n    });\n  };\n\n  const setCharacterBaseStats = (propName: string) => (\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    const newStat = Number(event.target.value);\n    if (newStat || event.target.value === \"\") {\n      setBaseStats({\n        ...baseStats,\n        [propName]: newStat > 100 ? 100 : newStat,\n      });\n    }\n  };\n\n  const setCharacterSpecialStats = (propName: string) => (\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    const newStat = Number(event.target.value);\n    if (newStat || event.target.value === \"\") {\n      setSpecialStats({\n        ...specialStats,\n        [propName]: newStat,\n      });\n    }\n  };\n\n  const setCharacterSkill = (propName: string, newSkill: number) => {\n    setSkills({\n      ...skills,\n      [propName]: newSkill,\n    });\n  };\n\n  const setPortrait = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setCharacter({\n      ...character,\n      info: {\n        ...character.info,\n        avatarUrl: event.target.value,\n      },\n    });\n  }\n\n  return (\n    <Wrapper>\n      <ThemeProvider theme={theme}>\n        <Box display=\"flex\" flex=\"1\">\n          <Box display=\"flex\" flex=\"5\" mr={2}>\n            <CharacterInfo info={character.info} setInfo={setCharacterInfo} />\n          </Box>\n          <Box display=\"flex\" flex=\"4\" mr={2}>\n            <CharacterBaseStats\n              baseStats={baseStats}\n              specialStats={specialStats}\n              setStats={setCharacterBaseStats}\n            />\n          </Box>\n          <Box display=\"flex\" flex=\"3\">\n            <CharacterProfile\n              specialStats={specialStats}\n              setStats={setCharacterSpecialStats}\n              avatarUrl={character.info.avatarUrl}\n              setAvatarUrl={setPortrait}\n            />\n          </Box>\n        </Box>\n        <Box display=\"flex\" mt={2}>\n          <CharacterOccupation\n            occupation={occupation}\n            setOccupation={setCharacterOccupation}\n          />\n        </Box>\n\n        <Box display=\"flex\" mt={2}>\n          <CharacterSkills\n            occupation={occupation}\n            skills={skills}\n            setSkill={setCharacterSkill}\n            stats={baseStats}\n            totalOccupationSkillPoints={totalOccupationSkillPoints}\n            setRemainingOccupationSkillPoints={\n              setRemainingOccupationSkillPoints\n            }\n            remainingHobbieSkillPoints={remainingHobbiePoints}\n            remainingOccupationSkillPoints={remainingOccupationSkillPoints}\n            setRemainingHobbieSkillPoints={setRemainingHobbiePoints}\n            totalHobbieSkillPoints={baseStats.intelligence * 2}\n          />\n        </Box>\n        <Box display=\"flex\" justifyContent=\"flex-end\" mt={3}>\n          <Button variant=\"contained\" color=\"primary\" onClick={onSaveCharacterClick}>\n            <Box m={1}>FINISH AND SAVE</Box>\n          </Button>\n        </Box>\n        <Dialog open={isErrorDialogOpen} onClose={handleCloseErrorDialog}>\n          <DialogTitle>\n            {\n              \"Can't save character, please correct the errors below before saving\"\n            }\n          </DialogTitle>\n          <DialogContent>\n            {errorMessages.map((message) => {\n              return (\n                <Box ml={2}>\n                  <DialogContentText>{`- ${message}`}</DialogContentText>\n                </Box>\n              );\n            })}\n          </DialogContent>\n        </Dialog>\n      </ThemeProvider>\n    </Wrapper>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { CharacterCreatorPage } from \"./pages/CharacterCreatorPage/CharacterCreatorPage\";\n\nconst AppWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  background-color: white;\n  min-height: 100vh;\n`;\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <header>\n      <AppWrapper>\n        <Router>\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/character/:characterId\">\n              <CharacterCreatorPage />\n            </Route>\n            <Route path=\"/create-character\">\n            <CharacterCreatorPage />\n            </Route>\n            <Route path=\"/\">\n              <></>\n            </Route>\n          </Switch>\n        </Router>\n      </AppWrapper>\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}